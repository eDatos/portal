«REM»
You can change code generation templates by using
Aspect-Oriented Programming features of oAW. You
can add AROUND advice in this file. Read 
Sculptor Developer's Guide for more information.
«ENDREM»     

«IMPORT sculptormetamodel»
«EXTENSION extensions::helper»
«EXTENSION extensions::dbhelper»
«EXTENSION extensions::properties»

«AROUND templates::domain::DomainObject::domainObjectHook FOR DomainObject»
    // This comment was generated from SpecialCases.xpt 
«ENDAROUND»

«AROUND templates::domain::DomainObjectAttributeAnnotation::columnAnnotations FOR Attribute»
	«IF type == "DateTimeTZ"»
	@org.hibernate.annotations.Columns(columns={@javax.persistence.Column(name="«getDatabaseName()»"),@javax.persistence.Column(name="«getDatabaseName()»_TZ")})
	@org.hibernate.annotations.Type(type="«getHibernateType()»")
	«ELSE»
    	 «targetDef.proceed()»
    «ENDIF»
«ENDAROUND»

«AROUND templates::domain::DomainObjectAttributeAnnotation::auditAnnotations FOR Attribute»
	«IF type == "DateTime"»
	@org.hibernate.annotations.Columns(columns={@javax.persistence.Column(name="«getDatabaseName()»"),@javax.persistence.Column(name="«getDatabaseName()»_TZ")})
	@org.hibernate.annotations.Type(type="org.joda.time.contrib.hibernate.PersistentDateTimeTZ")
	«ELSE»
		«targetDef.proceed()»
	«ENDIF»
«ENDAROUND»

«AROUND templates::db::MysqlDDL::column(String prefix) FOR Attribute-»
	«IF type == "DateTimeTZ" || name == "lastUpdated" || name == "createdDate" »«getDatabaseName()»_TZ VARCHAR(50)
	«IF !nullable»NOT NULL«ENDIF»,
	«ENDIF-»
	«targetDef.proceed()-»
«ENDAROUND»

«AROUND templates::db::MysqlDDL::afterCreateTable FOR DomainObject-»
  ENGINE=InnoDB «targetDef.proceed()-»
«ENDAROUND»

«AROUND templates::domain::DomainObject::dataTransferObjectHook FOR DataTransferObject-»
    /**
     * ToString
     */
    @Override
    public String toString() {
        try {
			org.apache.commons.lang.builder.ReflectionToStringBuilder builder = new org.apache.commons.lang.builder.ReflectionToStringBuilder(this, toStringStyle());	        
            builder.setAppendStatics(false);
            builder.setAppendTransients(true);
            return builder.toString();
        } catch (RuntimeException e) {
            // toString is only used for debug purpose and eventual exceptions should not be "ignored"
            return "RuntimeException in " + getClass().getName() + ".toString():" + e.getMessage();
        }
    }	
    
	protected org.apache.commons.lang.builder.ToStringStyle toStringStyle() {
		return org.apache.commons.lang.builder.ToStringStyle.MULTI_LINE_STYLE;
	}
«ENDAROUND»

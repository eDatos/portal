variables:
  # Used for skip tests in build or release stage if it's necessary. User can set the value before running the stage. Possible values are:
  #  "false": Tests will running in both stages. (by default)
  #  "true": Tests are skipped in both stages.
  SKIP_TESTS: "false"
  # Number of seconds in which the server log will be displayed in the gitlab ci console
  LOG_TIMEOUT: "180"
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -Duser.timezone=Atlantic/Canary -Dmaven.test.skip=$SKIP_TESTS"

# This template uses jdk8 for verifying and deploying images
image: maven:3.3.9-jdk-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
    - build
    - release   
    - demo
    - pre
    - pro

build:
    stage: build
    tags: ["build"]
    script:
        - 'mvn $MAVEN_CLI_OPTS deploy -s /tmp/settings.xml '
    artifacts:
        paths:
            - metamac-portal-web/target/*.war
            - metamac-portal-api-web/target/*.war
    only:
      - EDATOS-3188-gitlab_ci

release:
    stage: release
    tags: ["build"]
    script:
      - git config --global user.email "sistemas@arte-consultores.com"
      - git config --global user.name "arte"
      - git checkout -B "$CI_BUILD_REF_NAME"
      - if [[ -n "$RELEASE_VERSION" ]] ;
        then
          mvn -DreleaseVersion=$RELEASE_VERSION -Dresume=false -Darguments="-Duser.timezone=Atlantic/Canary -Dmaven.test.skip=$SKIP_TESTS" release:prepare release:perform -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
        else
          mvn -Dresume=false -Darguments="-Duser.timezone=Atlantic/Canary -Dmaven.test.skip=$SKIP_TESTS" release:prepare release:perform -Dusername=arte -Dpassword=$ARTEPASS -s /tmp/settings.xml ;
        fi
    artifacts:
      paths:
            - metamac-portal-web/target/*.war
            - metamac-portal-api-web/target/*.war
    only:
      - master
    when: manual

# ######################################################################################
# DEMO
# ######################################################################################
.job_template: &demo_job_definition
    stage: demo
    when: manual    

deploy all:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/internal/deploy.sh $RESTART
        - bash ./etc/deploy/scripts/demo/external/deploy.sh $RESTART
    
deploy internal:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/internal/deploy.sh $RESTART
    
deploy external:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/external/deploy.sh $RESTART

stop all servers:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/internal/server.sh stop edatos-internal01
        - bash ./etc/deploy/scripts/demo/external/server.sh stop edatos-external01

start all servers:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/internal/server.sh start edatos-internal01
        - bash ./etc/deploy/scripts/demo/external/server.sh start edatos-external01

log internal:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/internal/tail_log.sh $LOG_TIMEOUT

log external:
    <<: *demo_job_definition
    script:
        - bash ./etc/deploy/scripts/demo/external/tail_log.sh $LOG_TIMEOUT

# ######################################################################################
# PRE
# ######################################################################################
.job_template: &pre_job_definition
    image: anaga:5000/vpn_globalprotect:1.1.0
    stage: pre
    only:
        - master
    tags: ["deploy-vpn"]
    when: manual
    before_script:
        - bash -c "echo '$PASSWORD' | openconnect -b --protocol=gp -c /mnt/$CERT evpn.gobiernodecanarias.org --user=$USER_VPN --key-password=$KEY_PW -i tun1 --no-proxy --disable-ipv6 --no-dtls --servercert pin-sha256:Gs7T01dtMJ4z22fqpNFHG5N8/FDLp5YWZgu6+7G8WAM= --csd-wrapper=/root/hipreport.sh && sleep 5"

check pre internal server status:
    <<: *pre_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgcarta.gobiernodecanarias.net echo 'ok'
    
check pre external server status:
    <<: *pre_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgcartera.gobiernodecanarias.net echo 'ok'
    
pre deploy all:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/internal/deploy.sh $RESTART
        - bash ./etc/deploy/scripts/pre/external/deploy.sh $RESTART
    dependencies:
        - release

pre deploy internal:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/internal/deploy.sh $RESTART
    dependencies:
        - release

pre deploy external:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/external/deploy.sh $RESTART
    dependencies:
        - release

stop all pre servers:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/internal/server.sh stop arveja01
        - bash ./etc/deploy/scripts/pre/external/server.sh stop frangollo01

start all pre servers:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/internal/server.sh start arveja01
        - bash ./etc/deploy/scripts/pre/external/server.sh start frangollo01

pre log internal:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/internal/tail_log.sh $LOG_TIMEOUT

pre log external:
    <<: *pre_job_definition
    script:
        - bash ./etc/deploy/scripts/pre/external/tail_log.sh $LOG_TIMEOUT

# ######################################################################################
# PRO
# ######################################################################################
.job_template: &pro_job_definition
    image: anaga:5000/vpn_globalprotect:1.1.0
    stage: pro
    only:
        - master
    tags: ["deploy-vpn"]
    when: manual
    before_script:
        - bash -c "echo '$PASSWORD' | openconnect -b --protocol=gp -c /mnt/$CERT evpn.gobiernodecanarias.org --user=$USER_VPN --key-password=$KEY_PW -i tun1 --no-proxy --disable-ipv6 --no-dtls --servercert pin-sha256:Gs7T01dtMJ4z22fqpNFHG5N8/FDLp5YWZgu6+7G8WAM= --csd-wrapper=/root/hipreport.sh && sleep 5"

check pro internal server status:
    <<: *pro_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgdelicias.gobiernodecanarias.net echo 'ok'
    
check pro external server status:
    <<: *pro_job_definition
    script:
        - ssh -o "StrictHostKeyChecking=no" deploy@mgcrinaco.gobiernodecanarias.net echo 'ok' 
    
pro deploy all:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/internal/deploy.sh $RESTART
        - bash ./etc/deploy/scripts/pro/external/deploy.sh $RESTART
    dependencies:
        - release
    
pro deploy internal:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/internal/deploy.sh $RESTART
    dependencies:
        - release
    
pro deploy external:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/external/deploy.sh $RESTART
    dependencies:
        - release

stop all pro servers:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/internal/server.sh stop guagua01
        - bash ./etc/deploy/scripts/pro/external/server.sh stop bubango01

start all pro servers:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/internal/server.sh start guagua01
        - bash ./etc/deploy/scripts/pro/external/server.sh start bubango01

pro log internal:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/internal/tail_log.sh $LOG_TIMEOUT

pro log external:
    <<: *pro_job_definition
    script:
        - bash ./etc/deploy/scripts/pro/external/tail_log.sh $LOG_TIMEOUT

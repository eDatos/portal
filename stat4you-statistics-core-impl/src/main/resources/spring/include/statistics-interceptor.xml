<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/jee       http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <aop:aspectj-autoproxy/>

    <bean id="jpaInterceptorFlushEagerStatistics" class="org.springframework.orm.jpa.JpaInterceptor">
        <property name="entityManagerFactory" ref="entityManagerFactoryStatistics"/>
        <!-- Need to flush to detect OptimisticLockingException and do proper rollback. -->
        <property name="flushEager" value="true"/>
    </bean>

    <bean id="errorHandlingAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.ErrorHandlingAdvice"/>

    <bean id="hibernateErrorHandlingAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.HibernateErrorHandlingAdvice"/>

    <bean id="serviceContextStoreAdvice" class="org.fornax.cartridges.sculptor.framework.errorhandling.ServiceContextStoreAdvice"/>

    <bean id="loggingHandlingAdvice" class="com.stat4you.common.aop.LoggingInterceptor"/>

    <tx:advice id="txAdviceStatistics" transaction-manager="txManagerStatistics">
        <tx:attributes>
            <!-- all methods starting with 'get' or 'find' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="deleteDatasetRepository" read-only="false" no-rollback-for="*"/>
            <!-- all other methods are transactional and ApplicationException will cause rollback -->
            <tx:method name="*" read-only="false" rollback-for="org.fornax.cartridges.sculptor.framework.errorhandling.ApplicationException"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="businessServiceStatistics" expression="execution(public * com.stat4you.statistics..service.*.*(..))"/>
        <aop:pointcut id="readOnlyBusinessServiceStatistics" expression="execution(public * com.stat4you.statistics..service.*.get*(..)) or execution(public * com.stat4you.statistics..service.*.find*(..))"/>
        <!-- Repeating the expression, since I can't find a way to refer to the other pointcuts. -->
        <aop:pointcut id="updatingBusinessServiceStatistics"
            expression="execution(public * com.stat4you.statistics..service.*.*(..)) and not (execution(public * com.stat4you.statistics..service.*.get*(..)) or execution(public * com.stat4you.statistics..service.*.find*(..)))"/>
        <aop:advisor pointcut-ref="businessServiceStatistics" advice-ref="txAdviceStatistics" order="1"/>
        <aop:advisor pointcut-ref="businessServiceStatistics" advice-ref="serviceContextStoreAdvice" order="2"/>
        <aop:advisor pointcut-ref="businessServiceStatistics" advice-ref="errorHandlingAdvice" order="3"/>
        <aop:advisor pointcut-ref="businessServiceStatistics" advice-ref="hibernateErrorHandlingAdvice" order="4"/>
        <aop:advisor pointcut-ref="updatingBusinessServiceStatistics" advice-ref="jpaInterceptorFlushEagerStatistics" order="5"/>

        <!-- Logging interceptor -->
        <aop:aspect id="afterThrowing" ref="loggingHandlingAdvice">
            <aop:after-throwing pointcut-ref="businessServiceStatistics" throwing="ex" method="afterThrowing"/>
        </aop:aspect>
    </aop:config>
</beans>

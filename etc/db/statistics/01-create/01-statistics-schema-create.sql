-- ###########################################
-- # Create new entities
-- ###########################################

-- Normal entities
    
CREATE TABLE TBL_DATASETS_MOST_VISITED (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PROVIDER_ACRONYM VARCHAR(50) NOT NULL,
  DATASET_IDENTIFIER VARCHAR(255) NOT NULL,
  CONSTRAINT UNIQUE (ID)
	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_DATASETS_MOST_VISITED_TMP (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PROVIDER_ACRONYM VARCHAR(50) NOT NULL,
  DATASET_IDENTIFIER VARCHAR(255) NOT NULL,
  CONSTRAINT UNIQUE (ID)
	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_DATASETS_VISITED (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PROVIDER_ACRONYM VARCHAR(50) NOT NULL,
  DATASET_IDENTIFIER VARCHAR(255) NOT NULL,
  USER VARCHAR(200) NOT NULL,
  IP VARCHAR(50) NOT NULL,
  DATE DATETIME NOT NULL,
  CONSTRAINT UNIQUE (ID)
	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_INTERNATIONAL_STRINGS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  CONSTRAINT UNIQUE (ID)
	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_PROVIDERS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ACRONYM VARCHAR(50) NOT NULL,
  NAME VARCHAR(500) NOT NULL,
  URL VARCHAR(4000),
  LICENSE_URL VARCHAR(4000),
  LANGUAGE VARCHAR(20),
  LOGO VARCHAR(200),
  CITATION VARCHAR(4000),
	REMOVED_DATE_TZ VARCHAR(50)
	,
  REMOVED_DATE DATETIME,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  LICENSE_FK BIGINT,
  DESCRIPTION_FK BIGINT,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_DATASETS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  IDENTIFIER VARCHAR(255) NOT NULL,
	RELEASE_DATE_TZ VARCHAR(50)
	,
  RELEASE_DATE DATETIME,
	PROVIDER_RELEASE_DATE_TZ VARCHAR(50)
	,
  PROVIDER_RELEASE_DATE DATETIME,
  CATEGORIES VARCHAR(200),
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  PROVIDER_FK BIGINT NOT NULL,
  DRAFT_VERSION_ID_DATASET_VERSION BIGINT,
  DRAFT_VERSION_VERSION_NUMBER INTEGER,
  PUBLISHED_VERSION_ID_DATASET_VERSION BIGINT,
  PUBLISHED_VERSION_VERSION_NUMBER INTEGER,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_PRIMARY_MEASURES (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  IDENTIFIER VARCHAR(255) NOT NULL,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  TITLE_FK BIGINT NOT NULL,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_DATASETS_VERSIONS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  VERSION_NUMBER INTEGER NOT NULL,
  URL VARCHAR(4000),
  FREQUENCY VARCHAR(4000),
  LANGUAGE VARCHAR(20),
  LANGUAGES VARCHAR(200),
	PROVIDER_PUBLISHING_DATE_TZ VARCHAR(50)
	,
  PROVIDER_PUBLISHING_DATE DATETIME,
	PUBLISHING_DATE_TZ VARCHAR(50)
	,
  PUBLISHING_DATE DATETIME,
	UNPUBLISHING_DATE_TZ VARCHAR(50)
	,
  UNPUBLISHING_DATE DATETIME,
  IS_LAST_VERSION CHAR(1) NOT NULL,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  TITLE_FK BIGINT NOT NULL,
  DESCRIPTION_FK BIGINT,
  DATASET_FK BIGINT NOT NULL,
  PRIMARY_MEASURE_FK BIGINT NOT NULL,
  SOURCE VARCHAR(40) NOT NULL,
  STATE VARCHAR(40) NOT NULL,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_ATTRIBUTES_DEFINITIONS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  IDENTIFIER VARCHAR(255) NOT NULL,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  TITLE_FK BIGINT,
  DATASET_VERSION_FK BIGINT NOT NULL,
  ATTACHMENT_LEVEL VARCHAR(40) NOT NULL,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_CODES_DIMENSIONS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  IDENTIFIER VARCHAR(255) NOT NULL,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  TITLE_FK BIGINT NOT NULL,
  DIMENSION_FK BIGINT,
  PARENT_FK BIGINT,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_DIMENSIONS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  IDENTIFIER VARCHAR(255) NOT NULL,
  UUID VARCHAR(36) NOT NULL,
	CREATED_DATE_TZ VARCHAR(50)
	,
  CREATED_DATE DATETIME,
  CREATED_BY VARCHAR(50),
	LAST_UPDATED_TZ VARCHAR(50)
	,
  LAST_UPDATED DATETIME,
  LAST_UPDATED_BY VARCHAR(50),
  VERSION BIGINT NOT NULL,
  TITLE_FK BIGINT NOT NULL,
  DATASET_VERSION_FK BIGINT NOT NULL,
  TYPE VARCHAR(40) NOT NULL,
  CONSTRAINT UNIQUE (UUID)
  	

)  ENGINE=InnoDB ;

CREATE TABLE TBL_LOCALISED_STRINGS (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LABEL VARCHAR(4000) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  INTERNATIONAL_STRING_FK BIGINT,
  CONSTRAINT UNIQUE (ID)
	

)  ENGINE=InnoDB ;
  
  
  
-- Entity LocalisedStringEntity inverse referenced from InternationalStringEntity.texts
ALTER TABLE TBL_LOCALISED_STRINGS ADD CONSTRAINT FK_TBL_LOCALISED_STRINGS_TBL_INTERNATIONAL_STRINGS
	FOREIGN KEY (INTERNATIONAL_STRING_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);

-- Reference from ProviderEntity.LICENSE_FK to InternationalStringEntity
ALTER TABLE TBL_PROVIDERS ADD CONSTRAINT FK_TBL_PROVIDERS_LICENSE_FK
  FOREIGN KEY (LICENSE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Reference from ProviderEntity.DESCRIPTION_FK to InternationalStringEntity
ALTER TABLE TBL_PROVIDERS ADD CONSTRAINT FK_TBL_PROVIDERS_DESCRIPTION_FK
  FOREIGN KEY (DESCRIPTION_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
  
-- Reference from DatasetEntity.PROVIDER_FK to ProviderEntity
ALTER TABLE TBL_DATASETS ADD CONSTRAINT FK_TBL_DATASETS_PROVIDER_FK
  FOREIGN KEY (PROVIDER_FK) REFERENCES TBL_PROVIDERS(ID);
  
-- Reference from PrimaryMeasureEntity.TITLE_FK to InternationalStringEntity
ALTER TABLE TBL_PRIMARY_MEASURES ADD CONSTRAINT FK_TBL_PRIMARY_MEASURES_TITLE_FK
  FOREIGN KEY (TITLE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
  
-- Reference from DatasetVersionEntity.TITLE_FK to InternationalStringEntity
ALTER TABLE TBL_DATASETS_VERSIONS ADD CONSTRAINT FK_TBL_DATASETS_VERSIONS_TITLE_FK
  FOREIGN KEY (TITLE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Reference from DatasetVersionEntity.DESCRIPTION_FK to InternationalStringEntity
ALTER TABLE TBL_DATASETS_VERSIONS ADD CONSTRAINT FK_TBL_DATASETS_VERSIONS_DESCRIPTION_FK
  FOREIGN KEY (DESCRIPTION_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Reference from DatasetVersionEntity.DATASET_FK to DatasetEntity
ALTER TABLE TBL_DATASETS_VERSIONS ADD CONSTRAINT FK_TBL_DATASETS_VERSIONS_DATASET_FK
  FOREIGN KEY (DATASET_FK) REFERENCES TBL_DATASETS(ID);
-- Reference from DatasetVersionEntity.PRIMARY_MEASURE_FK to PrimaryMeasureEntity
ALTER TABLE TBL_DATASETS_VERSIONS ADD CONSTRAINT FK_TBL_DATASETS_VERSIONS_PRIMARY_MEASURE_FK
  FOREIGN KEY (PRIMARY_MEASURE_FK) REFERENCES TBL_PRIMARY_MEASURES(ID);
  
-- Reference from AttributeDefinitionEntity.TITLE_FK to InternationalStringEntity
ALTER TABLE TBL_ATTRIBUTES_DEFINITIONS ADD CONSTRAINT FK_TBL_ATTRIBUTES_DEFINITIONS_TITLE_FK
  FOREIGN KEY (TITLE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Reference from AttributeDefinitionEntity.DATASET_VERSION_FK to DatasetVersionEntity
ALTER TABLE TBL_ATTRIBUTES_DEFINITIONS ADD CONSTRAINT FK_TBL_ATTRIBUTES_DEFINITIONS_DATASET_VERSION_FK
  FOREIGN KEY (DATASET_VERSION_FK) REFERENCES TBL_DATASETS_VERSIONS(ID);
  
-- Reference from CodeDimensionEntity.TITLE_FK to InternationalStringEntity
ALTER TABLE TBL_CODES_DIMENSIONS ADD CONSTRAINT FK_TBL_CODES_DIMENSIONS_TITLE_FK
  FOREIGN KEY (TITLE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Entity CodeDimensionEntity inverse referenced from CodeDimensionEntity.subcodes
ALTER TABLE TBL_CODES_DIMENSIONS ADD CONSTRAINT FK_TBL_CODES_DIMENSIONS_TBL_CODES_DIMENSIONS
	FOREIGN KEY (PARENT_FK) REFERENCES TBL_CODES_DIMENSIONS(ID);

-- Reference from DimensionEntity.TITLE_FK to InternationalStringEntity
ALTER TABLE TBL_DIMENSIONS ADD CONSTRAINT FK_TBL_DIMENSIONS_TITLE_FK
  FOREIGN KEY (TITLE_FK) REFERENCES TBL_INTERNATIONAL_STRINGS(ID);
-- Reference from DimensionEntity.DATASET_VERSION_FK to DatasetVersionEntity
ALTER TABLE TBL_DIMENSIONS ADD CONSTRAINT FK_TBL_DIMENSIONS_DATASET_VERSION_FK
  FOREIGN KEY (DATASET_VERSION_FK) REFERENCES TBL_DATASETS_VERSIONS(ID);
-- Entity CodeDimensionEntity inverse referenced from DimensionEntity.codes
ALTER TABLE TBL_CODES_DIMENSIONS ADD CONSTRAINT FK_TBL_CODES_DIMENSIONS_TBL_DIMENSIONS
	FOREIGN KEY (DIMENSION_FK) REFERENCES TBL_DIMENSIONS(ID);

  
	
-- Many to many relations
    
CREATE TABLE TBL_ATTRIBUTES_DIMENSIONS (
  DIMENSION_FK BIGINT NOT NULL,
    FOREIGN KEY (DIMENSION_FK) REFERENCES TBL_DIMENSIONS(ID),
  ATTRIBUTE_DEFINITION_FK BIGINT NOT NULL,
    FOREIGN KEY (ATTRIBUTE_DEFINITION_FK) REFERENCES TBL_ATTRIBUTES_DEFINITIONS(ID)
)  ENGINE=InnoDB ;

